elem = verifica se um elemento pertence a lista ( booleano)
    ex : elem 5 [1,3,5]

null = retorna True se uma lista é vazia 
    ex : null []

(!!) = retorn o indice
    ex : [1,2,3] !! 1 -> retorna 2

replicate = faz uma lista replicando elements
    ex : replicate 4 'c' -> retorna "cccc"

reverse = inverte os elements de uma lista 
    ex : reverse [1,2] -> retorna [2,1]

take = gera uma lista com os n primeiros elements da lista original
    ex : take 2 ['d', 'f', 'g', 'r'] -> retorna "df"

drop = tira n elementos do inicio de uma lista 
    ex : drop 3 [1,2,3,4,5] -> retorna [4,5]

takeWhile = retorna o maior segmento inicial de uma lista dependendo da condição
    ex : takeWhile (<10) [1,3,13,4] -> retorna [1,3]
    ex : takeWhile (==1) [1,1,1,0,1] -> retorna [1,1,1]

dropWhile = o inverso da takeWhile 

splitAt = divide uma lista num par de sub listas pela posicao
    ex : splitAt 2 [3,4,2,1] -> retorna ([3,4], [2,1])

zip = recebe duas listas e retorna uma lista de pares 
    ex : zip [1,2] ['a','b'] -> retorna [(1,'a'), (2,'b')]

sum = soma tudo de uma lista 
product = multiplica tudo de uma lista 
max = maximo de uma lista 
min = minimo de uma lista